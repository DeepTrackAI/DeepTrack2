{
    "componentChunkName": "component---src-templates-api-page-tsx",
    "path": "/docs/deeptrack.features/Arguments",
    "result": {"pageContext":{"sections":{"body":[{"type":"paragraph","children":[{"type":"Text","content":"A convenience container for pipeline arguments."}]},{"type":"paragraph","children":[{"type":"Text","content":"A typical use-case is:"}]},{"type":"literal_block","children":[{"type":"Text","content":"arguments = Arguments(is_label=False)\nimage_loader = (\n    LoadImage(path=\"./image.png\") >>\n    GaussianNoise(sigma = (1 - arguments.is_label) * 5)\n)\nimage_loader.bind_arguments(arguments)\n\nimage_loader()              # Image with added noise\nimage_loader(is_label=True) # Raw image with no noise"}]},{"type":"paragraph","children":[{"type":"Text","content":"For non-mathematical dependence, create a local link to the property as follows:"}]},{"type":"literal_block","children":[{"type":"Text","content":"arguments = Arguments(is_label=False)\nimage_loader = (\n    LoadImage(path=\"./image.png\") >>\n    GaussianNoise(\n       is_label=arguments.is_label,\n       sigma=lambda is_label: 0 if is_label else 5\n    )\n)\nimage_loader.bind_arguments(arguments)\n\nimage_loader()              # Image with added noise\nimage_loader(is_label=True) # Raw image with no noise"}]},{"type":"paragraph","children":[{"type":"Text","content":"Keep in mind that if any dependent property is non-deterministic,\nthey may permanently change:"}]},{"type":"literal_block","children":[{"type":"Text","content":"arguments = Arguments(noise_max_sigma=5)\nimage_loader = (\n    LoadImage(path=\"./image.png\") >>\n    GaussianNoise(\n       noise_max_sigma=5,\n       sigma=lambda noise_max_sigma: rand() * noise_max_sigma\n    )\n)\n\nimage_loader.bind_arguments(arguments)\n\nimage_loader().get_property(\"sigma\") # 3.27...\nimage_loader(noise_max_sigma=0) # 0\nimage_loader().get_property(\"sigma\") # 1.93..."}]},{"type":"paragraph","children":[{"type":"Text","content":"As with any feature, all arguments can be passed by deconstructing the properties dict:"}]},{"type":"literal_block","children":[{"type":"Text","content":"arguments = Arguments(is_label=False, noise_sigma=5)\nimage_loader = (\n    LoadImage(path=\"./image.png\") >>\n    GaussianNoise(\n       sigma=lambda is_label, noise_sigma: 0 if is_label else noise_sigma\n       **arguments.properties\n    )\n)\nimage_loader.bind_arguments(arguments)\n\nimage_loader()              # Image with added noise\nimage_loader(is_label=True) # Raw image with no noise"}]}]},"superclass":"Feature","superclass_module":"deeptrack.features","module":"deeptrack.features","name":"Arguments","qualified_name":"deeptrack.features.Arguments","signature":"(_input=[], **kwargs)","modules":{"deeptrack.backend":[],"deeptrack.aberrations":["Aberration","Astigmatism","Defocus","GaussianApodization","HorizontalComa","HorizontalTilt","ObliqueAstigmatism","ObliqueTrefoil","Piston","SphericalAberration","Trefoil","VerticalComa","VerticalTilt","Zernike"],"deeptrack.augmentations":["Affine","Augmentation","Crop","CropToMultiplesOf","ElasticTransformation","FlipDiagonal","FlipLR","FlipUD","Pad","PadToMultiplesOf","Reuse"],"deeptrack.elementwise":["Abs","Angle","Arccos","Arccosh","Arcsin","Arcsinh","Arctan","Arctanh","Ceil","Conjugate","Cos","Cosh","ElementwiseFeature","Exp","Floor","Imag","Log","Log10","Log2","Real","Round","Sign","Sin","Sinh","Sqrt","Square","Tan","Tanh"],"deeptrack.features":["Add","Arguments","ArithmeticOperationFeature","AsType","Bind","BindUpdate","Chain","Combine","ConditionalSetFeature","ConditionalSetProperty","Dataset","Divide","DummyFeature","Equals","Feature","FloorDivide","GreaterThan","GreaterThanOrEquals","Label","Lambda","LessThan","LessThanOrEquals","LoadImage","Merge","Multiply","OneOf","OneOfDict","Power","Probability","Repeat","SampleToMasks","Slice","Stack","StructuralFeature","Subtract","Value","_get_position"],"deeptrack.generators":["ContinuousGenerator","DataList","Generator"],"deeptrack.holography":["FourierTransform","FourierTransformTransformation","InverseFourierTransform","Rescale","get_propagation_matrix"],"deeptrack.image":["Image","_binary_method","_inplace_binary_method","_numeric_methods","_reflected_binary_method","_unary_method","coerce","maybe_cupy","pad_image_to_fft","strip"],"deeptrack.layers":[],"deeptrack.losses":["abs","adjacency_consistency","affine_consistency","field_affine_consistency","flatten","nd_binary_crossentropy","nd_kl_divergence","nd_mean_absolute_error","nd_mean_absolute_percentage_error","nd_mean_squared_error","nd_mean_squared_logarithmic_error","nd_poisson","nd_squared_hinge","rotational_consistency","sigmoid","size_consistency","softmax","squared","weighted_crossentropy"],"deeptrack.math":["Average","AverageBlur","AveragePooling","BilateralBlur","Blur","BlurCV2","Clip","GaussianBlur","MedianBlur","NormalizeMinMax","NormalizeQuantile","NormalizeStandard","Pool"],"deeptrack.models":[],"deeptrack.noises":["Background","ComplexGaussian","Gaussian","Noise","Poisson"],"deeptrack.optics":["Brightfield","Fluorescence","IlluminationGradient","Microscope","Optics","_create_volume","_get_position"],"deeptrack.properties":["Property","PropertyDict","SequentialProperty","propagate_data_to_dependencies"],"deeptrack.scatterers":["Ellipse","Ellipsoid","MieScatterer","MieSphere","MieStratifiedSphere","PointParticle","Scatterer","Sphere"],"deeptrack.sequences":["Sequence","Sequential","propagate_sequential_data"],"deeptrack.statistics":["Cumsum","Max","Mean","Median","Min","PeakToPeak","Percentile","Prod","Quantile","Reducer","Std","Sum","Variance"],"deeptrack.test":[],"deeptrack.types":[],"deeptrack.utils":["as_list","get_kwarg_names","hasmethod","isiterable","kwarg_has_default","safe_call"],"deeptrack.backend._config":["Config"],"deeptrack.backend.citations":[],"deeptrack.backend.core":["DeepTrackDataDict","DeepTrackDataObject","DeepTrackNode","create_node_with_operator","equivalent"],"deeptrack.backend.mie":["mie_coefficients","mie_harmonics","stratified_mie_coefficients"],"deeptrack.backend.pint_definition":[],"deeptrack.backend.polynomials":["besselj","bessely","dbesselj","dbessely","dricbesh","dricbesj","dricbesy","ricbesh","ricbesj","ricbesy"],"deeptrack.backend.tensorflow_bindings":["_tf_abs","_tf_arccos","_tf_arccosh","_tf_arcsin","_tf_arcsinh","_tf_arctan","_tf_arctan2","_tf_arctanh","_tf_cbrt","_tf_cos","_tf_cosh","_tf_cumsum","_tf_fabs","_tf_fmax","_tf_fmin","_tf_hypot","_tf_logaddexp","_tf_max","_tf_maximum","_tf_mean","_tf_median","_tf_min","_tf_minimum","_tf_percentile","_tf_prod","_tf_ptp","_tf_quantile","_tf_reciprocal","_tf_sign","_tf_sin","_tf_sinh","_tf_sqrt","_tf_square","_tf_std","_tf_sum","_tf_tan","_tf_tanh","_tf_var","implements_tf"],"deeptrack.backend.units":["ConversionTable"],"deeptrack.models.gans.cgan":["CGAN"],"deeptrack.models.gans.cyclegan":[],"deeptrack.models.dense":["FullyConnected"],"deeptrack.models.embeddings":["ClassToken","ClassTokenLayer","LearnablePositionEmbs","LearnablePositionEmbsLayer"],"deeptrack.models.lodestar.equivariances":["Equivariance","LogScaleEquivariance","Rotational2DEquivariance","ScaleEquivariance","TranslationalEquivariance"],"deeptrack.models.gans.gan":["GAN"],"deeptrack.models.gans":[],"deeptrack.models.lodestar.generators":["LodeSTARGenerator"],"deeptrack.models.gnns":[],"deeptrack.models.lodestar":[],"deeptrack.models.lodestar.models":["LodeSTAR","LodeSTARBaseModel"],"deeptrack.models.gans.pcgan":["PCGAN"],"deeptrack.models.recurrent":["RNN"],"deeptrack.models.utils":["KerasModel","LoadModel","Model","_get_norm_by_name","as_KerasModel","as_activation","as_normalization","compile","register_config","single_layer_call","with_citation"],"deeptrack.models.gnns.layers":["ClassTokenFGNN","ClassTokenFGNNlayer","FGNN","FGNNlayer"],"deeptrack.models.gnns.models":["CTMAGIK","MAGIK"]}}},
    "staticQueryHashes": []}