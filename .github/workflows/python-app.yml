# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  create-badges:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: Colab Badge Action
      uses: trsvchn/colab-badge-action@v4
    - name: Commit & Push changes
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.head_ref }}
      
  build:

    strategy:
      matrix:
        tfa: [true, false]
        
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Colab Badge Action
      uses: trsvchn/colab-badge-action@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest numpy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Conditionally install tfa
      if: ${{ matrix.tfa }}
      run: |
        pip install tensorflow-addons
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest discover
